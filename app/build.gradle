apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "kotlin-allopen"

allOpen {
    annotation("nasa.photo.oftheday.utils.common.OpenClass")
}


android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion rootProject.ext.build_tools_version


    defaultConfig {
        applicationId "nasa.photo.oftheday"
        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug{
            minifyEnabled false
            buildConfigField("String", "BASE_URL","\"https://api.nasa.gov/planetary/\"")

        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL","\"https://api.nasa.gov/planetary/\"")

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //Kotlin Extension
    implementation "androidx.core:core-ktx:$ktx_version"

    //Appcompat
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //Lifecycle Annotations
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    //Material Component
    implementation "com.google.android.material:material:$material_components_version"

    //RxJava/RxAndroid
    implementation "io.reactivex.rxjava3:rxandroid:$rx_version"
    implementation "io.reactivex.rxjava3:rxjava:$rx_version"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$expresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$expresso_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation "org.hamcrest:hamcrest:$hamcrest_version"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"

}